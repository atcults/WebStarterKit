apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'idea'
apply plugin: 'maven'

group = 'JavaServer'
version = '1'

description = "Test app with OAuth2 and SpringMVC"

def publishMap = [warFile: group + "-" + version + ".war", user:"tom", password:"cat", server:"localhost", port: 90, deploy: group]


repositories {
    mavenCentral()
}

dependencies {
    compile group: 'cglib', name: 'cglib', version:'2.2.2'
    compile group: 'javax.servlet', name: 'jstl', version:'1.2'
    compile group: 'javax.servlet', name: 'javax.servlet-api', version:'3.1.0'
    compile group: 'org.springframework', name: 'spring-core', version:'3.1.0.RELEASE'
    compile group: 'org.springframework', name: 'spring-context', version:'3.1.0.RELEASE'
    compile group: 'org.springframework', name: 'spring-context-support', version:'3.1.0.RELEASE'
    compile group: 'org.springframework', name: 'spring-beans', version:'3.1.0.RELEASE'
    compile group: 'org.springframework', name: 'spring-webmvc', version:'3.1.0.RELEASE'
    compile group: 'org.springframework.security', name: 'spring-security-config', version:'3.1.0.RELEASE'
    compile group: 'org.springframework.security', name: 'spring-security-core', version:'3.1.0.RELEASE'
    compile group: 'org.springframework.security', name: 'spring-security-web', version:'3.1.0.RELEASE'
    compile group: 'org.springframework.security', name: 'spring-security-aspects', version:'3.1.0.RELEASE'
    compile group: 'org.springframework.security', name: 'spring-security-taglibs', version:'3.1.0.RELEASE'
    compile group: 'org.springframework.security.oauth', name: 'spring-security-oauth2', version:'1.0.0.RELEASE'
    testCompile group: 'org.springframework', name: 'spring-test', version:'3.1.0.RELEASE'
    testCompile group: 'junit', name: 'junit', version:'3.8.1'
}

task publish(dependsOn: build) << {

    def warFile = "$project.buildDir\\libs\\$publishMap.warFile"
    println "Publising $warFile"

    def procName = "curl --upload-file $warFile http://$publishMap.user:$publishMap.password@$publishMap.server:$publishMap.port/manager/text/deploy?path=/$publishMap.deploy&update=true"

    println "Executing: " + procName;

    def proc = procName.execute();

    proc.waitFor()

    if (proc.exitValue())
        throw new Exception("Publish war failed:" + proc.err.text)
    else
        print proc.text
}